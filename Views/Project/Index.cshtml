@model YoMateProjectShare.Controllers.PaginatedList<YoMateProjectShare.Models.Projects>
@{
    ViewBag.Title = "Index";
}
@using Microsoft.AspNetCore.Identity;
@using YoMateProjectShare.Areas.Identity.Data;

@inject SignInManager<UserInfo> SignInManager
@inject UserManager<UserInfo> UserManager
<h2>All Projects</h2>

<div style="position:absolute;width:60%;left:20%;text-align:center;text-anchor:middle;">

    <div>
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by string: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-action="Index">Back to Default Order</a>
                </p>
            </div>
        </form>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        Project ID
                    </th>
                    <th scope="col">
                        Article Name
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Author</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Upload Time</a>
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                <!-- for loop creating -->
                @foreach (var item in Model)
                {
                    <tr>
                        <th scope="row">
                            @Html.DisplayFor(modelItem => item.Id)
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.ArticleName)
                        </td>
                        <td>
                            @Html.ActionLink(item.AuthorName, "UserInfo", new {name=item.AuthorName})
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UploadTime)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    </div>
</div>